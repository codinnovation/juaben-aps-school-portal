import React, { useState } from "react";
import Head from "next/head";
import styles from "@/styles/admin_portal_css/studentProfilePage.module.css";
import Image from "next/image";
import StudentAttendancecomp from "./studentAttendance";
import StudentFeesComp from "./studentFees";
import StudentClassScore from "./studentClassScore";
import StudentHomework from "./studentHomework";
import StudentGuardian from "./studentGuardian";
import StudentHealth from "./studentHealth";
import StudentClassTest from "./studentClassTest";
import UpdateForm from "../updateStudent";
import { db } from "../../../lib/firebase";
import { get, ref, remove } from "firebase/database";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import {
  Button,
  Dialog,
  DialogContent,
  DialogTitle,
  IconButton,
} from "@mui/material";

function StudentProfilePage({
  hideStudentProfilePage,
  selectedStudent,
  attendance,
}) {
  const [activeComponent, setActiveComponent] = useState("studentProfile");
  const [toggleUpdateForm, setToggleUpdateForm] = useState(false);
  const [openModal, setOpenModal] = useState(false);

  const handleOpenModal = () => {
    setOpenModal(true);
  };

  const handleCloseModal = () => {
    setOpenModal(false);
  };

  const navigateToComp = (compName) => {
    setActiveComponent(compName);
  };

  const showUpdateForm = () => {
    setToggleUpdateForm(true);
  };

  const closeUpdateForm = () => {
    setToggleUpdateForm(false);
  };

  const handleRemoveStudent = async () => {
    try {
      await remove(ref(db, `japsstudents/${selectedStudent.key}`));
      toast.success(`Student ${selectedStudent.key} removed successfully`);
      hideStudentProfilePage();
    } catch (error) {
      console.error("Error deleting note:");
    }
  };

  return (
    <>
      <Head>
        <title>Juaben APS - Student Profile</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      {activeComponent === "studentProfile" && (
        <div className={styles.studentProfilePageContainer}>
          <div className={styles.navigationContainer}>
            <div className={styles.studentPhoto}>
              <Image
                src="/student5651.jpg"
                width={200}
                height={150}
                alt="student_image"
              />
            </div>
            <div className={styles.stundentName}>
              <h1>{`${selectedStudent?.FirstName || ""} ${
                selectedStudent?.MiddleName || ""
              } ${selectedStudent?.LastName || ""} `}</h1>
            </div>

            <div className={styles.studentNavLinks}>
              <ul>
                <li>
                  <button onClick={() => navigateToComp("studentGuardian")}>
                    Student Guardian
                  </button>
                </li>

                <li>
                  <button onClick={() => navigateToComp("studentHealth")}>
                    Student Health
                  </button>
                </li>
                <li>
                  <button onClick={() => navigateToComp("studentAttendance")}>
                    Attendance
                  </button>
                </li>

                <li>
                  <button onClick={() => navigateToComp("studentFees")}>
                    Fees
                  </button>
                </li>

                <li>
                  <button onClick={() => navigateToComp("studentClassScore")}>
                    Class Scores
                  </button>
                </li>

                <li>
                  <button onClick={() => navigateToComp("studentClassTest")}>
                    Class Test
                  </button>
                </li>

                <li>
                  <button onClick={() => navigateToComp("studentHomework")}>
                    Home Work
                  </button>
                </li>
              </ul>
            </div>

            <div className={styles.backToList}>
              <button onClick={hideStudentProfilePage}>Back To List</button>
            </div>
          </div>

          <div className={styles.studentProfileDetailsContainer}>
            <div className={styles.studentProfileFields}>
              <div className={styles.fields}>
                <label>First Name</label>
                <h1>{selectedStudent?.FirstName || "No first Name"}</h1>
              </div>

              <div className={styles.fields}>
                <label>Middle Name</label>
                <h1>{selectedStudent?.MiddleName || "No middle Name"}</h1>
              </div>

              <div className={styles.fields}>
                <label>Last Name</label>
                <h1>{selectedStudent?.LastName || "No Last Name"}</h1>
              </div>

              <div className={styles.fields}>
                <label>Class</label>
                <h1>{selectedStudent?.Class || "No Class"}</h1>
              </div>

              <div className={styles.fields}>
                <label>Student Number</label>
                <h1>{selectedStudent?.StudentNumber || "No Student Number"}</h1>
              </div>

              <div className={styles.fields}>
                <label>Gender</label>
                <h1>{selectedStudent?.Gender || "No gender"}</h1>
              </div>

              <div className={styles.fields}>
                <label>Date Of Birth</label>
                <h1>{selectedStudent?.DOB || "No Date of birth"}</h1>
              </div>

              <div className={styles.fields}>
                <label>Enrollment Date</label>
                <h1>{selectedStudent?.EnrollmentDate || "No middle Name"}</h1>
              </div>

              <div className={styles.fields}>
                <label>Student Residence</label>
                <h1>
                  {selectedStudent?.StudentResidence || "No Student Residence "}
                </h1>
              </div>

              <div className={styles.fields}>
                <label>Former School</label>
                <h1>{selectedStudent?.FormerSchool || "No Former School"}</h1>
              </div>

              <div className={styles.fields}>
                <label>Cause of Leaving</label>
                <h1>
                  {selectedStudent?.CauseOfLeaving || "No Cause of leaving"}
                </h1>
              </div>

              <div className={styles.fields}>
                <label>Student&apos;s Denomination</label>
                <h1>
                  {selectedStudent?.Denomination || "No Student Denomination"}
                </h1>
              </div>
            </div>

            <div className={styles.buttons}>
              <button onClick={showUpdateForm}>Edit Student</button>
              <button onClick={handleOpenModal}>Remove Student</button>
            </div>
          </div>
        </div>
      )}

      <Dialog open={openModal} onClose={handleCloseModal}>
        <DialogTitle
          style={{ fontSize: "15px", textTransform: "uppercase" }}
        >{`Are you sure you want to delete`}</DialogTitle>
        <DialogContent>
          <ul
            style={{
              textDecoration: "none",
              listStyle: "none",
              fontFamily: "sans-serif",
            }}
          >
            <Button onClick={handleRemoveStudent}>Yes</Button>
            <Button onClick={handleCloseModal}>No</Button>
          </ul>
        </DialogContent>
      </Dialog>

      {activeComponent === "studentAttendance" && (
        <StudentAttendancecomp
          navigateToComp={navigateToComp}
          selectedStudent={selectedStudent}
          attendance={attendance}
          hideStudentProfilePage={hideStudentProfilePage}
        />
      )}

      {activeComponent === "studentFees" && (
        <StudentFeesComp
          navigateToComp={navigateToComp}
          hideStudentProfilePage={hideStudentProfilePage}
          selectedStudent={selectedStudent}
        />
      )}

      {activeComponent === "studentGuardian" && (
        <StudentGuardian
          navigateToComp={navigateToComp}
          hideStudentProfilePage={hideStudentProfilePage}
          selectedStudent={selectedStudent}
        />
      )}

      {activeComponent === "studentHealth" && (
        <StudentHealth
          navigateToComp={navigateToComp}
          hideStudentProfilePage={hideStudentProfilePage}
          selectedStudent={selectedStudent}
        />
      )}

      {activeComponent === "studentClassScore" && (
        <StudentClassScore
          navigateToComp={navigateToComp}
          selectedStudent={selectedStudent}
          hideStudentProfilePage={hideStudentProfilePage}
        />
      )}

      {activeComponent === "studentClassTest" && (
        <StudentClassTest
          navigateToComp={navigateToComp}
          selectedStudent={selectedStudent}
          hideStudentProfilePage={hideStudentProfilePage}
        />
      )}
      {activeComponent === "studentHomework" && (
        <StudentHomework
          navigateToComp={navigateToComp}
          selectedStudent={selectedStudent}
          hideStudentProfilePage={hideStudentProfilePage}
        />
      )}

      {toggleUpdateForm && (
        <UpdateForm
          closeUpdateForm={closeUpdateForm}
          selectedStudent={selectedStudent}
        />
      )}
      <ToastContainer />
    </>
  );
}

export default StudentProfilePage;
