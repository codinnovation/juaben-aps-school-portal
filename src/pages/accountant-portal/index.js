import React, { useEffect, useState } from "react";
import Head from "next/head";
import Layout from "./layout";
import { useRouter } from "next/router";
import { auth, db } from "../../lib/firebase";
import MainBody from "../accountant-portal/mainBody";
import withSession from "@/lib/session";
import { ref } from "firebase/database";
import { get } from "firebase/database";


function Index({ user }) {
  const router = useRouter();
  const [studentData, setStudentData] = useState([]);
  const [teachersData, setTeachersData] = useState([])


  useEffect(() => {
    const fetchData = async () => {
      try {
        const dbRef = ref(db, "japsstudents");
        const response = await get(dbRef);
        const data = response.val();

        if (data && typeof data === "object") {
          const dataArray = Object.entries(data).map(([key, value]) => ({
            key,
            ...value,
          }));
          setStudentData(dataArray);
        } else {
          setStudentData([]);
        }
      } catch (error) {
        console.error("Error fetching data:");
        setStudentData([]);
      }
    };

    fetchData();
  }, []);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const dbRef = ref(db, "usersTeachers");
        const response = await get(dbRef);
        const data = response.val();

        if (data && typeof data === "object") {
          const dataArray = Object.entries(data).map(([key, value]) => ({
            key,
            ...value,
          }));
          setTeachersData(dataArray);
        } else {
          setTeachersData([]);
        }
      } catch (error) {
        console.error("Error fetching data:");
        setTeachersData([]);
      }
    };

    fetchData();
  }, []);



  return (
    <>
      <Head>
        <title>Juaben APS - Accountant Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/logo2.png" />
      </Head>
      <Layout>
        <MainBody user={user} studentData={studentData} teachersData={teachersData} />
      </Layout>
    </>
  );
}

export default Index;

export const getServerSideProps = withSession(async function ({ req, res }) {
  const user = req.session.get("user");
  if (!user || !user.displayName.includes("Accountant")) {
    return {
      redirect: {
        destination: "/login",
        permanent: false,
      },
    };
  }
  auth.signOut();

  if (user) {
    req.session.set("user", user);
    await req.session.save();
  }

  return {
    props: {
      user: user,
    },
  };
});
