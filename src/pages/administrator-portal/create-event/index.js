import React, { useState } from "react";
import Head from 'next/head'
import styles from "../../../styles/admin_portal_css/create_event.module.css";
import Layout from "../layout";
import { useRouter } from "next/router";
import { db } from "../../../lib/firebase";
import { ref, push } from "firebase/database";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

function Index() {
  const router = useRouter();

  function navigateToEventList() {
    router.push({
      pathname: "/administrator-portal/events",
    });
  }

  const [eventData, setEventData] = useState({
    EventName: "",
    EventVenue: "",
    StartDate: "",
    EndDate: "",
    EventDescription: "",
  });

  const createEvent = async (e) => {
      try {
        const newEvent = push(ref(db, "createEvents"), eventData);
        toast.success("Event Created successful");
        const newEventKey = newEvent.newEventKey;
        return newEventKey;
      } catch (error) {}
    
  };

  return (
    <>
    
        <>
          <Layout>
            <Head>
              <title>Juaben APS - Create Event</title>
              <meta name="description" content="Generated by create next app" />
              <meta
                name="viewport"
                content="width=device-width, initial-scale=1"
              />
            </Head>
            <div className={styles.container}>
              <div className={styles.containerItems}>
                <div className={styles.containerHeader}>
                  <h1 onClick={navigateToEventList}>View Event</h1>
                  <h1 onClick={createEvent}>Create Event </h1>
                </div>

                <div className={styles.inputFields}>
                  <div className={styles.fields}>
                    <div className={styles.field}>
                      <label>Event Name</label>
                      <input
                        placeholder="Event Name"
                        name="Event Name"
                        value={eventData.EventName}
                        onChange={(e) =>
                          setEventData({
                            ...eventData,
                            EventName: e.target.value,
                          })
                        }
                      />
                    </div>

                    <div className={styles.field}>
                      <label>Event Venue</label>
                      <input
                        placeholder="Event Venue"
                        name="Event Venue"
                        value={eventData.EventVenue}
                        onChange={(e) =>
                          setEventData({
                            ...eventData,
                            EventVenue: e.target.value,
                          })
                        }
                      />
                    </div>

                    <div className={styles.field}>
                      <label>Start Date</label>
                      <input
                        placeholder="Event Start Date"
                        name="Start Date"
                        value={eventData.StartDate}
                        type="date"
                        onChange={(e) =>
                          setEventData({
                            ...eventData,
                            StartDate: e.target.value,
                          })
                        }
                      />
                    </div>

                    <div className={styles.field}>
                      <label>End Date</label>
                      <input
                        placeholder="Event End Date"
                        name="End Date"
                        value={eventData.EndDate}
                        type="date"
                        onChange={(e) =>
                          setEventData({
                            ...eventData,
                            EndDate: e.target.value,
                          })
                        }
                      />
                    </div>
                  </div>
                  <div className={styles.anotherinput}>
                    <label>Event Description</label>
                    <textarea
                      value={eventData.EventDescription}
                      name="Event Description"
                      onChange={(e) =>
                        setEventData({
                          ...eventData,
                          EventDescription: e.target.value,
                        })
                      }
                    />
                  </div>
                </div>
              </div>
            </div>
            <ToastContainer />
          </Layout>
        </>
      
    </>
  );
}

export default Index;
