import React, { useState } from "react";
import Head from "next/head";
import styles from "@/styles/admin_portal_css/profile.module.css";
import UpdateForm from "../update-student";
import Attendance from './attendance';
import ClassTest from './classTest';
import Fees from './fees';
import GroupWork from './groupWork'
import IndividualTest from "./individualTest";
import ProjectWork from "./projectWork";
import { db } from "../../../lib/firebase";
import { ref, remove } from "firebase/database";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import {
  Button,
  Dialog,
  DialogContent,
  DialogTitle,
} from "@mui/material";
import Menu from "@mui/icons-material/Menu";

function StudentProfilePage({
  hideStudentProfilePage,
  selectedStudent,
  attendance,
}) {
  const [activeComponent, setActiveComponent] = useState("profile");
  const [toggleUpdateForm, setToggleUpdateForm] = useState(false);
  const [openModal, setOpenModal] = useState(false);

  const handleCloseModal = () => {
    setOpenModal(false);
  };

  const navigateToComp = (compName) => {
    setActiveComponent(compName);
  };

  const showUpdateForm = () => {
    setToggleUpdateForm(true);
  };

  const closeUpdateForm = () => {
    setToggleUpdateForm(false);
  };

  const handleRemoveStudent = async () => {
    try {
      await remove(ref(db, `japsstudents/${selectedStudent.key}`));
      toast.success(`Student ${selectedStudent.key} removed successfully`);
      hideStudentProfilePage();
    } catch (error) {
      console.error("Error deleting note:");
    }
  };

  return (
    <>
      <Head>
        <title>Juaben APS - Student Profile</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      <div className={styles.profilePageContainer}>
        <div className={styles.profilePageContent}>
          <div className={styles.profilePageHeader}>
            <div className={styles.profileName}>
              <h1>{`Profile - ${selectedStudent?.FirstName} ${selectedStudent?.LastName}`}</h1>
            </div>

            <div className={styles.navContainer}>
              <button onClick={() => navigateToComp("profile")}>
                Profile
              </button>
              <button onClick={() => navigateToComp("attendance")}>
                Attendance
              </button>
              <button onClick={() => navigateToComp("fees")}>
                Fees
              </button>
              <button onClick={() => navigateToComp("individualTest")}>
                Individual Test
              </button>

              <button onClick={() => navigateToComp("groupWork")}>
                Group Work
              </button>

              <button onClick={() => navigateToComp("projectWork")}>
                Project Work
              </button>
              <button onClick={() => navigateToComp("classTest")}>
                Class Test
              </button>
            </div>
            <div
              className={styles.menuContainer}
            >
              <Menu />
            </div>
          </div>
        </div>

        {activeComponent === "profile" && (
          <div className={styles.profileContainer}>
            <div className={styles.profileItems}>
              <div className={styles.items}>
                <div className={styles.item}>
                  <p>First Name</p>
                  <h1>{selectedStudent?.FirstName}</h1>
                </div>

                <div className={styles.item}>
                  <p>Middle Name</p>
                  <h1>{selectedStudent?.MiddleName}</h1>
                </div>

                <div className={styles.item}>
                  <p>Last Name</p>
                  <h1>{selectedStudent?.LastName}</h1>
                </div>

                <div className={styles.item}>
                  <p>Gender</p>
                  <h1>{selectedStudent?.Gender}</h1>
                </div>

                <div className={styles.item}>
                  <p>Date Of Birth</p>
                  <h1>{selectedStudent?.DOB}</h1>
                </div>

                <div className={styles.item}>
                  <p>Student Number</p>
                  <h1>{selectedStudent?.StudentNumber}</h1>
                </div>

                <div className={styles.item}>
                  <p>Enrollment Date</p>
                  <h1>{selectedStudent?.EnrollmentDate}</h1>
                </div>

                <div className={styles.item}>
                  <p>Student Residence</p>
                  <h1>{selectedStudent?.StudentResidence}</h1>
                </div>

                <div className={styles.item}>
                  <p>Class</p>
                  <h1>{selectedStudent?.Class}</h1>
                </div>

                <div className={styles.item}>
                  <p>NHIS No</p>
                  <h1>{selectedStudent?.NHISno}</h1>
                </div>

                <div className={styles.item}>
                  <p>NHIS Name</p>
                  <h1>{selectedStudent?.NHISName}</h1>
                </div>

                <div className={styles.item}>
                  <p>Guardian&apos;s Name</p>
                  <h1>{selectedStudent?.guardianName}</h1>
                </div>

                <div className={styles.item}>
                  <p>Guardian&apos;s Residence</p>
                  <h1>{selectedStudent?.guardianResidence}</h1>
                </div>

                <div className={styles.item}>
                  <p>Guardian&apos;s Phone</p>
                  <h1>{selectedStudent?.guardianPhone}</h1>
                </div>

                <div className={styles.item}>
                  <p>Guardian&apos;s Other Phone</p>
                  <h1>{selectedStudent?.guardianOtherPhone}</h1>
                </div>
              </div>
            </div>
            <div className={styles.backToList}>
              <button onClick={hideStudentProfilePage}>Back To List</button>
              <button onClick={showUpdateForm}>Edit Profile</button>
              <button onClick={() => setOpenModal(true)}>Remove Student</button>
            </div>
          </div>
        )}
      </div>

      <Dialog open={openModal} onClose={handleCloseModal}>
        <DialogTitle
          style={{ fontSize: "15px", textTransform: "uppercase" }}
        >{`Are you sure you want to delete`}</DialogTitle>
        <DialogContent>
          <ul
            style={{
              textDecoration: "none",
              listStyle: "none",
              fontFamily: "sans-serif",
            }}
          >
            <Button onClick={handleRemoveStudent}>Yes</Button>
            <Button onClick={handleCloseModal}>No</Button>
          </ul>
        </DialogContent>
      </Dialog>

      {activeComponent === "attendance" && (
        <Attendance
          navigateToComp={navigateToComp}
          selectedStudent={selectedStudent}
          attendance={attendance}
          hideStudentProfilePage={hideStudentProfilePage}
        />
      )}

      {activeComponent === "fees" && (
        <Fees
          navigateToComp={navigateToComp}
          hideStudentProfilePage={hideStudentProfilePage}
          selectedStudent={selectedStudent}
        />
      )}

      {activeComponent === "individualTest" && (
        <IndividualTest
          navigateToComp={navigateToComp}
          selectedStudent={selectedStudent}
          hideStudentProfilePage={hideStudentProfilePage}
        />
      )}

      {activeComponent === "classTest" && (
        <ClassTest
          navigateToComp={navigateToComp}
          selectedStudent={selectedStudent}
          hideStudentProfilePage={hideStudentProfilePage}
        />
      )}

      {activeComponent === "groupWork" && (
        <GroupWork
          navigateToComp={navigateToComp}
          selectedStudent={selectedStudent}
          hideStudentProfilePage={hideStudentProfilePage}
        />
      )}
      {activeComponent === "projectWork" && (
        <ProjectWork
          navigateToComp={navigateToComp}
          selectedStudent={selectedStudent}
          hideStudentProfilePage={hideStudentProfilePage}
        />
      )}

      {toggleUpdateForm && (
        <UpdateForm
          closeUpdateForm={closeUpdateForm}
          selectedStudent={selectedStudent}
        />
      )}
      <ToastContainer />
    </>
  );
}

export default StudentProfilePage;
